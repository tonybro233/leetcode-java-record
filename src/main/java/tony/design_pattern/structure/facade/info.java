/**
 * 外观模式的目的是隐藏系统的复杂性，提供一个统一的接口用来操作子系统，接口内部使用子系统的
 * 各个接口实现。它给子系统提供了一个简单、单一的屏障，客户通过这个屏障来与子系统进行通信。
 * 通过使用外观模式，使得客户对子系统的引用变得简单，但是它违背了“开闭原则”，因为增加新的
 * 子系统可能需要修改外观类或客户端的源代码
 */
package tony.design_pattern.structure.facade;
