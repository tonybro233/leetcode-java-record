/**
 * 建造者模式主要是将一个复杂对象的构建与表示分离,
 * 使用多个简单的对象一步一步构建成一个复杂的对象
 * 与工厂模式的区别是：建造者模式更加关注与零件装配的顺序。
 *
 * 如果产品之间差异很大，或者产品内部非常复杂，各种产品无法统一处理，则不适用建造者模式
 *
 * 建造者模式主要包含四个角色
 * 1.Product（产品角色）： 一个具体的产品对象。
 * 2.Builder（抽象建造者）： 创建一个Product对象的各个部件指定的抽象接口。
 * 3.ConcreteBuilder（具体建造者）： 实现抽象接口，构建和装配各个部件。
 * 4.Director（指挥者）： 构建一个使用Builder接口的对象。它主要是用于创建一个复杂的对象。
 *   它主要有两个作用，一是隔离客户与对象的生产过程，二是负责控制产品对象的生产过程。
 *
 * j2ee的应用场景下这个设计模式并不常见
 */
package tony.design_pattern.building.builder;
